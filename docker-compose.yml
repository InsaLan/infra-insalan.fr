services:
  backend:
    build: ./backend
    image: insalan/backend
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      STATIC_ROOT: ${STATIC_ROOT}
    volumes:
      - static:${STATIC_ROOT}
    expose:
      - 8000
    networks:
      - backend
    links:
      - db
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx
    environment:
      - NGINX_HOST=${WEBSITE_HOST}
      - NGINX_PORT=80
      - STATIC_ROOT=${STATIC_ROOT}
    ports:
      - "80:80"
    volumes:
      - static:/usr/share/nginx/html/static:ro
      - frontend:/usr/share/nginx/html/frontend
      - ./nginx/templates:/etc/nginx/templates:ro
      - logs:/var/log
    networks:
      - backend
    depends_on:
      - backend
      - frontend

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_SUPERUSER}
      POSTGRES_PASSWORD: ${DB_SUPERPASS}
      INSALAN_USERNAME: ${DB_USER}
      INSALAN_PASSWORD: ${DB_PASS}
      INSALAN_DATABASE: ${DB_NAME}
    volumes:
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - database:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - backend

  frontend:
    build: ./frontend
    image: insalan/frontend
    volumes:
      - frontend:/dist
    networks:
      - backend

networks:
  backend:

volumes:
  database:
  static:
  frontend:
  logs:
