name: infra-insalanfr-preprod
services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    image: insalan/backend-preprod
    environment:
      WEBSITE_HOST: beta.${WEBSITE_HOST}
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_SSL: ${MAIL_SSL}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_PASS: ${MAIL_PASS}
      STATIC_ROOT: ${BACKEND_STATIC_ROOT}
      SUPERUSER_USER: ${SUPERUSER_USER}
      SUPERUSER_PASS: ${SUPERUSER_PASS}
      DJANGO_SECRET: ${BACKEND_DJANGO_SECRET}
      DEV: ${DEV}
    volumes:
      - static-preprod:${BACKEND_STATIC_ROOT}
      - ./backend:/app
    expose:
      - 8000
    networks:
      - backend
    links:
      - db
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_SUPERUSER}
      POSTGRES_PASSWORD: ${DB_SUPERPASS}
      INSALAN_USERNAME: ${DB_USER}
      INSALAN_PASSWORD: ${DB_PASS}
      INSALAN_DATABASE: ${DB_NAME}
      TZ: Europe/Paris
      PGTZ: Europe/Paris
    volumes:
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - database-preprod:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - backend

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    image: insalan/frontend-preprod
    environment:
      - VITE_API_URL=api.beta.${WEBSITE_HOST}
      - NODE_ENV=${FRONTEND_NODE_ENV}
      - VITE_WEBSITE_HOST=beta.${WEBSITE_HOST}
    volumes:
      - frontend-preprod:/dist
      - ./frontend:/src
    expose:
      - "5173"
    networks:
      - backend
    
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    image: insalan/nginx-preprod
    environment:
      - NGINX_HOST=${WEBSITE_HOST}
      - NGINX_PORT=80
      - STATIC_ROOT=${BACKEND_STATIC_ROOT}
    ports:
      - "${PREPROD_NGINX_PORT}:80"
    volumes:
      - static-preprod:/usr/share/nginx/html/static:ro
      - frontend-preprod:/usr/share/nginx/html/frontend
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - logs-preprod:/var/log
    networks:
      - backend
    depends_on:
      - backend
      - frontend

networks:
  backend:

volumes:
  static-preprod:
  database-preprod:
  frontend-preprod:
  logs-preprod:
